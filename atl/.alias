# PERSONALIZACION DE LA BASH EN ATL
#. /etc/profile.d/lmod.sh

export TERM=xterm-256color
export EDITOR=vim
export PS_FORMAT=euser,start,etime,pid,psr,pcpu,bsdtime,pmem,cmd

[[ $- != *i* ]] && return

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}
#
			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

# DEBUG BASH
# export PS4='$0.$LINENO+'

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
	if type -P dircolors >/dev/null ; then
		if [[ -f ~/.dir_colors ]] ; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]] ; then
			eval $(dircolors -b /etc/DIR_COLORS)
		fi
	fi

	if [[ ${EUID} == 0 ]] ; then
		PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
	#else
        # GIT STATUS & BRANCH SUPPORT
        #export GIT_PS1_SHOWDIRTYSTATE=1
        #export PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \W$(__git_ps1 " (%s)")] -> \[\033[01;40m\][\#]\[\033[00m\] \n\[\033[01;31m\](\w)\[\033[01;37m\] $([[ $? != 0 ]] && echo "\[\033[01;31m\]:\[\033[01;34m\] ")\D{%T} -> \[\033[00m\]'
        #NO-COLOR: export PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
	fi

	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh

alias ls='ls --color -F --group-directories-first '
alias df='df -hl'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias vi='/usr/bin/vim'
alias more=less
alias ll='ls -alrtF'
alias dir='ls -ltr -d */'
alias l.='ls -d .* --color=auto'
alias la='ls -A'
alias l='ls -CF'
alias a='cd ..'
alias rm='rm -iv'
alias cp='cp -iv'
alias ct='column -t'

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize
shopt -s expand_aliases

# Enable history appending instead of overwriting.  #139609
shopt -s histappend
#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# JUST ONE HISTORY
# From https://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows
# Avoid duplicates
export HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend
# After each command, append to the history file and reread it
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"
export HISTTIMEFORMAT="%F %T "
### MY FUNCS
web-server() 
{
    python -m SimpleHTTPServer
}

servidor_socks ()
{
    ssh -l "${1}" "${2}" -D 9090
}

servidor_psql ()
{
    ssh -L 5432:localhost:5432 owgis
}

servidor_vnc ()
{
    ssh -L 5901:localhost:5901 "${1}"@"${2}"
}

servidor_novnc ()
{
    #ssh -L6080:localhost:6080 vm-dgtic
    ssh -L6080:localhost:6080 "${1}"
}

inicia_mkdocs(){
   cd ~
   . /opt/python/mambaforge/etc/profile.d/conda.sh
   conda activate
   conda activate mkdocs
   cd Documentos/desarrollos/containers/ometeotl/
   mkdocs serve
}

# CLUSTER-ICAyCC 
alias slurm='. ~/.slurm'
alias operativo='. ~/.operativo'

# TMUX
alias tmx='tmux a -t $1'

# SSH-chalchi
alias chalchi='ssh -t chalchi "sudo -i"'

# some tap completions
bind "set completion-ignore-case on"
bind "set completion-map-case on"
bind "set show-all-if-ambiguous on"

# some history tips:
# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history"
# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"

# faster navigation
shopt -s autocd
shopt -s dirspell
shopt -s cdspell
# IP
alias showip="curl ipconfig.io -4"
